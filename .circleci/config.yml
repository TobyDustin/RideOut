version: 2.1
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: mvn integration-test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Save WAR file
          command: |
            mkdir -p ~/project/rideout
            find . -type f -regex ".*/target/.*war" -exec cp {} ~/project/rideout/ \;
          when: always
      - store_artifacts:
          path: ~/project/rideout
      - persist_to_workspace:
          root: .
          paths:
            - rideout
  docker_build:
    environment:
      IMAGE_NAME: solentio/rideout
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build -t $IMAGE_NAME:$(echo ${CIRCLE_BRANCH} | tr '/' '_') -f Dockerfile.circleci .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $IMAGE_NAME:$(echo ${CIRCLE_BRANCH} | tr '/' '_')
  kube_deploy:
    docker:
      - image: marcdufresne/kubetpl-base
    steps:
      - run:
          name: Create Kube config file
          command: |
            mkdir -p ~/.kube/
            echo $KUBE_CONFIG | base64 -di >> ~/.kube/config
      - run:
          name: Patch Kubectl Deployment
          command: |
            kubectl patch -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}" deployment rideout
  kube_deploy_dev:
    docker:
      - image: marcdufresne/kubetpl-base
    steps:
      - run:
          name: Create Kube config file
          command: |
            mkdir -p ~/.kube/
            echo $KUBE_CONFIG | base64 -di >> ~/.kube/config
      - run:
          name: Patch Kubectl Deployment
          command: |
            kubectl patch -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}" deployment rideout-dev
workflows:
  version: 2
  build-master-dev:
    jobs:
      - build
      - docker_build:
          requires:
            - build
      - kube_deploy:
          requires:
            - docker_build
          filters:
            branches:
              only:
                - master
      - kube_deploy_dev:
          requires:
            - docker_build
          filters:
            branches:
              only:
                - dev
